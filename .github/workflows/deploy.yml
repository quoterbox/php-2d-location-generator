name: Deploy

on:
  push:
    branches: [ master ]

jobs:
  tests:

    runs-on: ubuntu-latest

    steps:
      - name: Cloning the Git repository
        uses: actions/checkout@v3

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run tests
        run: composer run-script test

      - name: Run pwd command
        run: pwd

      - name: Run ls command
        run: ls

  deploy:

    runs-on: ubuntu-latest
    needs: [tests]

    strategy:
      matrix:
        node-version: [ 16.x ]

    steps:
      - name: Cloning the Git repository
        uses: actions/checkout@v3

      - name: Use Node js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies from Composer
        run: composer install -q --no-ansi --no-interaction --no-plugins --no-progress --no-scripts --optimize-autoloader --prefer-dist

      - name: Dump autoload for Composer
        run: composer dump-autoload --optimize

      - name: Install dependencies from NPM
        run: npm ci

      - name: Build frontend
        run: npm run prod

        #Setup key
      - name: Set options for command line
        run: set -eu
      - name: Create the directory for the SSH key
        run: mkdir "$HOME/.ssh"
      - name: Write the SSH key to the KEY-file
        run: echo "${{ secrets.DEPLOY_KEY_LG2D }}" > "$HOME/.ssh/key"
      - name: Change permissions for new SSH key
        run: chmod 600 "$HOME/.ssh/key"

      - name: Deploy vendor to a remote server
        run: rsync -e "ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no" --archive --compress --delete ./vendor/ ${{ secrets.DEPLOY_USER_LG2D }}@${{ secrets.DEPLOY_HOST_LG2D }}:${{ secrets.DEPLOY_VENDOR_DEST_LG2D }}

      - name: Deploy project files to a remote server
        run: rsync -e "ssh -i $HOME/.ssh/key -o StrictHostKeyChecking=no" --archive --compress --delete ./src/ ${{ secrets.DEPLOY_USER_LG2D }}@${{ secrets.DEPLOY_HOST_LG2D }}:${{ secrets.DEPLOY_DEST_LG2D }}



